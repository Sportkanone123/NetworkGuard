package de.sportkanone123.networkguard.spigot.module.impl.antiexploit;

import de.sportkanone123.networkguard.spigot.data.PlayerData;
import de.sportkanone123.networkguard.spigot.module.Module;
import de.sportkanone123.networkguard.spigot.module.ModuleInfo;
import de.sportkanone123.networkguard.spigot.packet.LoginPacket;
import de.sportkanone123.networkguard.spigot.packet.PlayPacket;
import io.github.retrooper.packetevents.packetwrappers.play.in.updatesign.WrappedPacketInUpdateSign;

import java.nio.charset.StandardCharsets;

@ModuleInfo(name = "Sign", description = "Checks for large signs.")
public class SignModule extends Module {

    public SignModule(final PlayerData data) {
        super(data);
    }

    @Override
    public void handle(PlayPacket packet) {
        if(packet.isUpdateSign()){
            WrappedPacketInUpdateSign updateSign = new WrappedPacketInUpdateSign(packet.getRawPacket());

            if(updateSign.getTextLines().length > 4){
                packet.getPacketEvent().setCancelled(true);
                this.fail("sign has to many lines!");
            }

            for(String line : updateSign.getTextLines()){
                if(line.getBytes(StandardCharsets.UTF_8).length > 64){
                    packet.getPacketEvent().setCancelled(true);
                    this.fail("length of line is too big!");
                }
            }
        }
    }

    @Override
    public void handle(LoginPacket packet) {

    }
}
