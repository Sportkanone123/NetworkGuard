package de.sportkanone123.networkguard.spigot.module.impl.antiexploit;

import de.sportkanone123.networkguard.spigot.data.PlayerData;
import de.sportkanone123.networkguard.spigot.module.PacketModule;
import de.sportkanone123.networkguard.spigot.module.ModuleInfo;
import de.sportkanone123.networkguard.spigot.packet.LoginPacket;
import de.sportkanone123.networkguard.spigot.packet.PlayPacket;
import io.github.retrooper.packetevents.packetwrappers.WrappedPacket;
import io.github.retrooper.packetevents.packetwrappers.play.in.custompayload.WrappedPacketInCustomPayload;

import java.nio.charset.StandardCharsets;

@ModuleInfo(name = "CustomPayload", description = "Checks for large CustomPayload packets.")
public class CustomPayloadModule extends PacketModule {

    public CustomPayloadModule(final PlayerData data) {
        super(data);
    }

    @Override
    public void handle(PlayPacket packet) {
        WrappedPacket wrappedPacket = new WrappedPacket(packet.getRawPacket());

        if(wrappedPacket.toString().getBytes(StandardCharsets.UTF_8).length > 16384){
            packet.getPacketEvent().setCancelled(true);
            this.fail("packet too large!");
        }

        if(packet.isCustomPayload()){
            WrappedPacketInCustomPayload customPayload = new WrappedPacketInCustomPayload(packet.getRawPacket());

            if(customPayload.getChannelName().length() > 32){
                packet.getPacketEvent().setCancelled(true);
                this.fail("packet too large!");
            }
        }
    }

    @Override
    public void handle(LoginPacket packet) {

    }
}